@import "for-loop";

.flex-container {
  display: flex;
  max-width: 100%;
  flex-wrap: wrap;
  justify-content: space-between;
  &__center {
    justify-content: center;
  }
  .flex-item-mixin(0rem, 1, 1);

  &.flex-small {
    .for(1 2 3 4);
    .-each(@col) {
      &-@{col} {
        .flex-item-mixin(0rem, @col, 1);
        .flex-item-mixin(0rem, @col, 2);
        .flex-item-mixin(0rem, @col, 3);
      }
    }
  }
  &.flex-medium {
    .for(1 2 3 4);
    .-each(@col) {
      &-@{col} {
        .flex-item-mixin(48rem, @col, 1);
        .flex-item-mixin(48rem, @col, 2);
        .flex-item-mixin(48rem, @col, 3);
      }
    }
  }
  &.flex-large {
    .for(1 2 3 4);
    .-each(@col) {
      &-@{col} {
        .flex-item-mixin(68rem, @col, 1);
        .flex-item-mixin(68rem, @col, 2);
        .flex-item-mixin(68rem, @col, 3);

      }
    }
  }
}

.flex-item-mixin(@size, @col, @spacing) {
  @media (min-width: @size) {
    > * {
      & when not (@col = 1) {
        .flex-spacing-1& {
          margin-right: 0.25rem;
          margin-left: 0.25rem;
        }
        .flex-spacing-2& {
          margin-right: 0.5rem;
          margin-left: 0.5rem;
        }
        .flex-spacing-3& {
          margin-right: 1rem;
          margin-left: 1rem;
        }
        width: percentage(0.85 / @col);
      }
      & when (@col = 1) {
        width: 100%;
      }
      flex-grow: 1;

      .flex-container__center&:last-child {
        flex-grow: 0;
      }
    }
  }
}
